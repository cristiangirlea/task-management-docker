services:
  redis:
    container_name: "${REDIS_CONTAINER_NAME}_${BUILD_NUMBER}"
    build:
      context: ".docker/redis"   # Point to the redis context folder
      dockerfile: "Dockerfile"
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  mariadb:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    networks:
      - app_network

  app:
    container_name: "${LARAVEL_CONTAINER_NAME}_${BUILD_NUMBER}"
    build:
      context: "./task-management-app"  # Context for the Laravel app files
      dockerfile: "../.docker/laravel/Dockerfile"  # Point to the external Dockerfile
    env_file:
      - .env
    volumes:
      - ./task-management-app:/var/www/html
    ports:
      - "${LARAVEL_PORT}:9000"
    networks:
      - app_network
    depends_on:
      - mariadb
      - redis
    command: /usr/local/bin/entrypoint.sh

  node:
    container_name: "${NODE_CONTAINER_NAME}_${BUILD_NUMBER}"
    build:
      context: "./nodejs-backend"  # Context for the Node.js app files
      dockerfile: "../.docker/express/Dockerfile"  # Point to the external Dockerfile
    env_file:
      - .env
    volumes:
      - ./nodejs-backend:/usr/src/app  # Bind-mount the folder for live updates
    ports:
      - "${EXPRESS_PORT}:4000"
    networks:
      - app_network
    depends_on:
      - redis
      - app

  react:
    container_name: "${REACT_CONTAINER_NAME}_${BUILD_NUMBER}"
    build:
      context: "./next-frontend"  # Context for the React app files
      dockerfile: "../.docker/react/Dockerfile"  # Point to the external Dockerfile
    env_file:
      - .env
    volumes:
      - ./next-frontend:/usr/src/app  # Bind-mount the folder for live updates
    ports:
      - "${NEXT_PORT}:3000"  # Default Next.js dev port is 3000
    networks:
      - app_network
    depends_on:
      - node

  nginx:
    image: nginx:latest
    container_name: "${NGINX_CONTAINER_NAME}_${BUILD_NUMBER}"
    ports:
      - "8080:80"  # Map port 80 in the container to 8080 on the host
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./task-management-app:/var/www/html
    networks:
      - app_network
    depends_on:
      - app # Ensure NGINX waits until the Laravel container is up
      - node # Ensure NGINX waits until the Express container is up
      - react # Ensure NGINX waits until the React container is up
networks:
  app_network:
    driver: bridge

volumes:
  redis_data:
